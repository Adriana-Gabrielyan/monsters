{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u0440\\u0438\\u0430\\u043D\\u0430\\\\Downloads\\\\monsters\\\\monsters\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport \"./App.css\";\nimport { Card } from \"./components/card/card.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => this.setState({\n        monsters: users\n      }));\n    };\n\n    this.handleClick = (id, type) => {\n      const monsters = [...this.state.monsters];\n      const selectedMonsters = [...this.state.selectedMonsters];\n      const selectedMonster = this.state.monsters.find(item => {\n        return item.id === id;\n      });\n      selectedMonsters.push(selectedMonster);\n      const monsterIndex = this.state.monsters.findIndex(item => item.id === id);\n      monsters.splice(monsterIndex, 1);\n      this.setState({\n        selectedMonsters,\n        monsters\n      });\n    };\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n      selectedMonsters: []\n    };\n  }\n\n  render() {\n    const {\n      monsters\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"All Monsters\"), /*#__PURE__*/React.createElement(CardList, {\n      type: \"avaible\",\n      handleClick: this.handleClick,\n      monsters: monsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Selected Monsters\", \" \", this.state.selectedMonsters.length > 0 ? this.state.selectedMonsters.length : \"\"), this.state.selectedMonsters.length > 0 ? /*#__PURE__*/React.createElement(CardList, {\n      type: \"favorites\",\n      monsters: this.state.selectedMonsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }) : \"You haven't selected any monster\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Адриана/Downloads/monsters/monsters/src/App.js"],"names":["React","Component","CardList","Card","App","constructor","componentDidMount","fetch","then","response","json","users","setState","monsters","handleClick","id","type","state","selectedMonsters","selectedMonster","find","item","push","monsterIndex","findIndex","splice","searchField","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport \"./App.css\";\nimport { Card } from \"./components/card/card.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n      selectedMonsters: [],\n    };\n  }\n\n  componentDidMount = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  };\n  //   handleClick = (id) => {\n  //     const monstersCopy = this.state.monsters;\n\n  //     const selectedMonster = monstersCopy.find((item) => {\n  //       return item.id === id;\n  //     });\n\n  //     this.setState((prevState) => ({\n  //       selectedMonsters: [...prevState.selectedMonsters, selectedMonster].flat(\n  //         2\n  //       ),\n  //     }));\n  //   };\n\n  handleClick = (id, type) => {\n    const monsters = [...this.state.monsters];\n    const selectedMonsters = [...this.state.selectedMonsters];\n\n    const selectedMonster = this.state.monsters.find((item) => {\n      return item.id === id;\n    });\n\n    selectedMonsters.push(selectedMonster);\n\n    const monsterIndex = this.state.monsters.findIndex(\n      (item) => item.id === id\n    );\n    monsters.splice(monsterIndex, 1);\n\n    this.setState({ selectedMonsters, monsters });\n  };\n\n  render() {\n    const { monsters } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"main\">\n          <div className=\"w-50\">\n            <h1>All Monsters</h1>\n            <CardList type='avaible' handleClick={this.handleClick} monsters={monsters} />\n          </div>\n\n          <div className=\"w-50\">\n            <h1>\n              Selected Monsters{\" \"}\n              {this.state.selectedMonsters.length > 0\n                ? this.state.selectedMonsters.length\n                : \"\"}\n            </h1>\n            {this.state.selectedMonsters.length > 0 ? (\n              <CardList type='favorites' monsters={this.state.selectedMonsters} />\n            ) : (\n              \"You haven't selected any monster\"\n            )}\n            <div className=\"card-list\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}