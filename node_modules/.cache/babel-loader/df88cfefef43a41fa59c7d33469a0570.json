{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u0440\\u0438\\u0430\\u043D\\u0430\\\\Downloads\\\\monsters\\\\monsters\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport \"./App.css\";\nimport { Card } from \"./components/card/card.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => this.setState({\n        monsters: users\n      }));\n    };\n\n    this.handleClick = id => {\n      if (!this.state.selectedMonstersIds.includes(id)) {\n        this.state.selectedMonstersIds.push(id);\n        const selectedMonster = this.state.monsters.filter(item => {\n          return item.id === id;\n        });\n        this.setState(prevState => ({\n          selectedMonsters: [...prevState.selectedMonsters, selectedMonster].flat(2)\n        }));\n      }\n    };\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n      selectedMonstersIds: [],\n      selectedMonsters: []\n    };\n  }\n\n  render() {\n    const {\n      monsters\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, \"All Monsters\"), /*#__PURE__*/React.createElement(CardList, {\n      handleClick: this.handleClick,\n      monsters: monsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Selected Monsters  \", this.state.selectedMonsters.length > 0 ? this.state.selectedMonsters.length : '', \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, this.state.selectedMonsters.map(monster => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-container\",\n      key: 'selected' + monster.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"monster\",\n      src: `https://robohash.org/${monster.id}?set=set2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }, monster.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 60\n      }\n    }, monster.email)))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Адриана/Downloads/monsters/monsters/src/App.js"],"names":["React","Component","CardList","Card","App","constructor","componentDidMount","fetch","then","response","json","users","setState","monsters","handleClick","id","state","selectedMonstersIds","includes","push","selectedMonster","filter","item","prevState","selectedMonsters","flat","searchField","render","length","map","monster","name","email"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport \"./App.css\";\nimport {Card} from \"./components/card/card.component\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: \"\",\n            selectedMonstersIds: [],\n            selectedMonsters: [],\n\n        };\n    }\n\n    componentDidMount = () => {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((response) => response.json())\n            .then((users) => this.setState({monsters: users}));\n    }\n\n\n    handleClick = (id) => {\n        if(!this.state.selectedMonstersIds.includes(id)){\n            this.state.selectedMonstersIds.push(id)\n\n            const selectedMonster = this.state.monsters.filter((item) => {\n                return item.id === id\n            })\n\n            this.setState((prevState) => ({\n                selectedMonsters: [...prevState.selectedMonsters, selectedMonster].flat(2)\n            }))\n        }\n    }\n\n    render() {\n\n        const {monsters} = this.state;\n\n        return (\n            <div className=\"App\">\n\n                <div className=\"main\">\n                    <div className=\"w-50\">\n                        <h1>All Monsters</h1>\n                        <CardList handleClick={this.handleClick} monsters={monsters}/>\n                    </div>\n\n                    <div className=\"w-50\">\n                        <h1>Selected Monsters  {this.state.selectedMonsters.length > 0 ? this.state.selectedMonsters.length : ''} </h1>\n                        <div className=\"card-list\">\n                            {this.state.selectedMonsters.map((monster) => (\n\n                                <div className=\"card-container\" key={'selected' + monster.id}>\n                                    <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2`}/>\n                                    <h2>{monster.name}</h2><p>{monster.email}</p>\n                                </div>\n\n                            ))}\n\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}